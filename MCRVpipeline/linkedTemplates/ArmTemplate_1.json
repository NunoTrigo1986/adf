{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "MCRVpipeline"
		},
		"ls_dl_enheter_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_dl_enheter'"
		},
		"ls_dl_enheter_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mcrvpip.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ds_parameters_eikon')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mcrvpiraw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "eikon"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "parameters_eikon_adf.json",
						"container": "configs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"filename_ny": {
							"type": "string"
						},
						"filename_original": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parameters_yield')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mcrvpiraw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Yields"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "parameters_yields_adf.json",
						"container": "configs"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ssb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mcrvpiraw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "table_01222.parquet",
						"folderPath": {
							"value": "@concat(formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'),'/')",
							"type": "Expression"
						},
						"container": "ssb"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "FÃ¸dselsoverskot",
						"type": "INT64"
					},
					{
						"name": "Nettoinnflytting, inkl. inn- og utvandring",
						"type": "INT64"
					},
					{
						"name": "kvartal",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_underenhenter_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_eikon",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Foretaksregister/underenheter"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('underenheter-',formatDatetime(utcnow(),'MM-yyy'),'.parquet')",
							"type": "Expression"
						},
						"folderPath": "underenheter",
						"container": "foretaksregister"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_underenheter_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Breg1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Foretaksregister/underenheter"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('underenheter-',formatDatetime(utcnow(),'dd-MM-yyyy'),'.csv')",
							"type": "Expression"
						},
						"folderPath": "underenheter",
						"container": "foretaksregister"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_underenheter_foretaksregister_json_http')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_foretaksregister",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Foretaksregister/underenheter"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "underenheter/lastned"
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_dl_enheter')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_dl_enheter_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_dl_enheter_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "ekstra-krefter",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_getData foretaksregister')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy enheter from foretaksregister",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['organisasjonsnummer']"
										},
										"sink": {
											"name": "organisasjonsnummer",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['navn']"
										},
										"sink": {
											"name": "navn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['organisasjonsform']['kode']"
										},
										"sink": {
											"name": "organisasjonsform_kode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['registreringsdatoEnhetsregisteret']"
										},
										"sink": {
											"name": "registreringsdatoEnhetsregisteret",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['registrertIMvaregisteret']"
										},
										"sink": {
											"name": "registrertIMvaregisteret",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['naeringskode1']['kode']"
										},
										"sink": {
											"name": "naeringskode1_kode",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['naeringskode2']['kode']"
										},
										"sink": {
											"name": "naeringskode2_kode",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['naeringskode3']['kode']"
										},
										"sink": {
											"name": "naeringskode3_kode",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['antallAnsatte']"
										},
										"sink": {
											"name": "antallAnsatte",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['forretningsadresse']['kommunenummer']"
										},
										"sink": {
											"name": "kommunenummer",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['forretningsadresse']['adresse'][0]"
										},
										"sink": {
											"name": "forretningsadresse_adresse'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['stiftelsesdato']"
										},
										"sink": {
											"name": "stiftelsesdato",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['sisteInnsendteAarsregnskap']"
										},
										"sink": {
											"name": "sisteInnsendteAarsregnskap",
											"type": "Int32"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "ds_enheter_foretakregister_json_http",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_enheter_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy underenheter from fr",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['organisasjonsnummer']"
										},
										"sink": {
											"name": "organisasjonsnummer",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['navn']"
										},
										"sink": {
											"name": "navn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['organisasjonsform']['kode']"
										},
										"sink": {
											"name": "organisasjonsform_kode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['registreringsdatoEnhetsregisteret']"
										},
										"sink": {
											"name": "registreringsdatoEnhetsregisteret",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['registrertIMvaregisteret']"
										},
										"sink": {
											"name": "registrertIMvaregisteret",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['naeringskode1']['kode']"
										},
										"sink": {
											"name": "naeringskode1_kode",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['antallAnsatte']"
										},
										"sink": {
											"name": "antallAnsatte",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['overordnetEnhet']"
										},
										"sink": {
											"name": "overordnetEnhet",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['oppstartsdato']"
										},
										"sink": {
											"name": "oppstartsdato",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['beliggenhetsadresse']['kommunenummer']"
										},
										"sink": {
											"name": "beliggenhetsadresse_kommunenummer",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['beliggenhetsadresse']['adresse'][0]"
										},
										"sink": {
											"name": "beliggenhetsadresse_adresse'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['naeringskode2']['kode']"
										},
										"sink": {
											"name": "naeringskode2_kode",
											"type": "Double"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "ds_underenheter_foretaksregister_json_http",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_underenheter_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-10-28T11:53:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_underenheter_foretaksregister_json_http')]",
				"[concat(variables('factoryId'), '/datasets/ds_underenheter_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_getData foretaksregister_parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy enheter from foretaksregister",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['organisasjonsnummer']"
										},
										"sink": {
											"name": "organisasjonsnummer",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['navn']"
										},
										"sink": {
											"name": "navn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['organisasjonsform']['kode']"
										},
										"sink": {
											"name": "organisasjonsform_kode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['registreringsdatoEnhetsregisteret']"
										},
										"sink": {
											"name": "registreringsdatoEnhetsregisteret",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['registrertIMvaregisteret']"
										},
										"sink": {
											"name": "registrertIMvaregisteret",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['naeringskode1']['kode']"
										},
										"sink": {
											"name": "naeringskode1_kode",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['naeringskode2']['kode']"
										},
										"sink": {
											"name": "naeringskode2_kode",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['naeringskode3']['kode']"
										},
										"sink": {
											"name": "naeringskode3_kode",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['antallAnsatte']"
										},
										"sink": {
											"name": "antallAnsatte",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['forretningsadresse']['kommunenummer']"
										},
										"sink": {
											"name": "kommunenummer",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['forretningsadresse']['adresse'][0]"
										},
										"sink": {
											"name": "forretningsadresse_adresse'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['stiftelsesdato']"
										},
										"sink": {
											"name": "stiftelsesdato",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['sisteInnsendteAarsregnskap']"
										},
										"sink": {
											"name": "sisteInnsendteAarsregnskap",
											"type": "Int32"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "ds_enheter_foretakregister_json_http",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_enheter_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy underenheter from fr",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['organisasjonsnummer']"
										},
										"sink": {
											"name": "organisasjonsnummer",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['navn']"
										},
										"sink": {
											"name": "navn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['organisasjonsform']['kode']"
										},
										"sink": {
											"name": "organisasjonsform_kode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['registreringsdatoEnhetsregisteret']"
										},
										"sink": {
											"name": "registreringsdatoEnhetsregisteret",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['registrertIMvaregisteret']"
										},
										"sink": {
											"name": "registrertIMvaregisteret",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['naeringskode1']['kode']"
										},
										"sink": {
											"name": "naeringskode1_kode",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['antallAnsatte']"
										},
										"sink": {
											"name": "antallAnsatte",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['overordnetEnhet']"
										},
										"sink": {
											"name": "overordnetEnhet",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['oppstartsdato']"
										},
										"sink": {
											"name": "oppstartsdato",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['beliggenhetsadresse']['kommunenummer']"
										},
										"sink": {
											"name": "beliggenhetsadresse_kommunenummer",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['beliggenhetsadresse']['adresse'][0]"
										},
										"sink": {
											"name": "beliggenhetsadresse_adresse'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['naeringskode2']['kode']"
										},
										"sink": {
											"name": "naeringskode2_kode",
											"type": "Double"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "ds_underenheter_foretaksregister_json_http",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_underenhenter_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-10-28T11:53:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_underenheter_foretaksregister_json_http')]",
				"[concat(variables('factoryId'), '/datasets/ds_underenhenter_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_append_eikon')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_ny",
								"type": "DatasetReference"
							},
							"name": "newparquet"
						},
						{
							"dataset": {
								"referenceName": "ds_original",
								"type": "DatasetReference"
							},
							"name": "existingparquet"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_original",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "signaturenew",
							"description": "__index_level_0__, fingerprint'"
						},
						{
							"name": "signatureexisting",
							"description": "__"
						},
						{
							"name": "exists1"
						},
						{
							"name": "samle"
						},
						{
							"name": "eliminatefingertrips"
						}
					],
					"scriptLines": [
						"parameters{",
						"     output as string",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> newparquet",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> existingparquet",
						"newparquet derive(fingerprint = sha2(256,columns())) ~> signaturenew",
						"existingparquet derive(fingerprint = sha2(256,columns())) ~> signatureexisting",
						"signaturenew, signatureexisting exists(signaturenew@fingerprint == signatureexisting@fingerprint,",
						"     negate:true,",
						"     broadcast: 'auto')~> exists1",
						"exists1, existingparquet union(byName: true)~> samle",
						"samle select(mapColumn(",
						"          each(match(name!='fingerprint'))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> eliminatefingertrips",
						"eliminatefingertrips sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:[($output)],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_append_yields')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_ny_yields",
								"type": "DatasetReference"
							},
							"name": "newparquet"
						},
						{
							"dataset": {
								"referenceName": "ds_original_yields",
								"type": "DatasetReference"
							},
							"name": "existingparquet"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_original_yields",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "signaturenew",
							"description": "__index_level_0__, fingerprint'"
						},
						{
							"name": "signatureexisting",
							"description": "__"
						},
						{
							"name": "exists1"
						},
						{
							"name": "samle"
						},
						{
							"name": "eliminatefingertrips"
						}
					],
					"scriptLines": [
						"parameters{",
						"     output as string",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> newparquet",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> existingparquet",
						"newparquet derive(fingerprint = sha2(256,columns())) ~> signaturenew",
						"existingparquet derive(fingerprint = sha2(256,columns())) ~> signatureexisting",
						"signaturenew, signatureexisting exists(signaturenew@fingerprint == signatureexisting@fingerprint,",
						"     negate:true,",
						"     broadcast: 'auto')~> exists1",
						"exists1, existingparquet union(byName: true)~> samle",
						"samle select(mapColumn(",
						"          each(match(name!='fingerprint'))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> eliminatefingertrips",
						"eliminatefingertrips sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:[($output)],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_etl_eikon')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "etl_eikon",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "eikon-etl",
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "ls_eikon_etl",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "etl_eikon",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_parameters_eikon",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "df_append_eikon",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_original",
											"type": "DatasetReference",
											"parameters": {
												"ds_filename_original": {
													"value": "@item().filename_ny",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_historie",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().filename_ny",
													"type": "Expression"
												},
												"folder": "@concat(formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'),'/')"
											}
										}
									]
								},
								{
									"name": "df_append_eikon",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_append_eikon",
											"type": "DataFlowReference",
											"parameters": {
												"output": {
													"value": "'@{item().filename_ny}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"newparquet": {
													"ds_filename_ny": {
														"value": "@item().filename_ny",
														"type": "Expression"
													}
												},
												"existingparquet": {
													"ds_filename_original": "@item().filename_original"
												},
												"sink1": {
													"ds_filename_original": "@item().filename_ny"
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-02T11:17:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_parameters_eikon')]",
				"[concat(variables('factoryId'), '/dataflows/df_append_eikon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_etl_yields')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_parameters_yield",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "df_append_yields",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_original_yields",
											"type": "DatasetReference",
											"parameters": {
												"ds_filename_original": {
													"value": "@item().filename_ny",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_historie_yields",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@item().filename_ny",
												"folder": {
													"value": "@concat(formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'),'/')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "df_append_yields",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_append_yields",
											"type": "DataFlowReference",
											"parameters": {
												"output": {
													"value": "'@{item().filename_ny}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"newparquet": {
													"ds_filename_ny": {
														"value": "@item().filename_ny",
														"type": "Expression"
													}
												},
												"existingparquet": {
													"ds_filename_original": {
														"value": "@item().filename_ny",
														"type": "Expression"
													}
												},
												"sink1": {
													"ds_filename_original": {
														"value": "@item().filename_ny",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-02T11:17:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_parameters_yield')]",
				"[concat(variables('factoryId'), '/dataflows/df_append_yields')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/foretaksregister_monedlig')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_getData foretaksregister",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2023-01-25T09:40:00",
						"timeZone": "Morocco Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								0
							],
							"monthDays": [
								25
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_getData foretaksregister')]"
			]
		}
	]
}