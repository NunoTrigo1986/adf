{
	"name": "Update_finn_sql",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_finn_ny",
						"type": "DatasetReference"
					},
					"name": "nyfinn",
					"description": " Source employees file, changes every day"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_original",
						"type": "DatasetReference"
					},
					"name": "finnSQL",
					"description": "Current rows in DimEmployees DW table"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_original",
						"type": "DatasetReference"
					},
					"name": "sinkNew",
					"description": " "
				},
				{
					"dataset": {
						"referenceName": "ds_sql_original",
						"type": "DatasetReference"
					},
					"name": "update"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_original",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "LookupIDs"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "SetAttrsForNew"
				},
				{
					"name": "NormNames"
				},
				{
					"name": "delObjekt"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "normnames1"
				},
				{
					"name": "split1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "alterRow11"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "select2"
				},
				{
					"name": "lookup2"
				},
				{
					"name": "select3"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "split2"
				},
				{
					"name": "select4"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "select5"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Fylke as string,",
				"          Kommune as string,",
				"          Objeckt as string,",
				"          tittel as string,",
				"          type_bolig as string,",
				"          location as string,",
				"          Antall_soverom as long,",
				"          id as long,",
				"          price as long,",
				"          area as string,",
				"          local_area_name as string,",
				"          long as double,",
				"          lat as double,",
				"          furnished_state as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['*.parquet']) ~> nyfinn",
				"source(output(",
				"          fylke as string,",
				"          kommune as string,",
				"          tittel as string,",
				"          type_bolig as string,",
				"          fursnihed_satus as string,",
				"          adresse as string,",
				"          antall_soverom as short,",
				"          id as long,",
				"          pris as integer,",
				"          area as string,",
				"          sted as string,",
				"          long as double,",
				"          lat as double,",
				"          datefrom as date,",
				"          dateto as date,",
				"          iscurrent as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> finnSQL",
				"delObjekt, finnSQL lookup(delObjekt@id == finnSQL@id",
				"     && price == pris,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LookupIDs",
				"NormNames split(isNull(iscurrent),",
				"     iscurrent == 0,",
				"     disjoint: true) ~> ConditionalSplit1@(NewRow, commingagain)",
				"select2 derive(datefrom = currentDate(),",
				"          dateto = toDate(null()),",
				"          iscurrent = 1) ~> SetAttrsForNew",
				"LookupIDs select(mapColumn(",
				"          Fylke = delObjekt@Fylke,",
				"          Kommune = delObjekt@Kommune,",
				"          tittel = delObjekt@tittel,",
				"          type_bolig = delObjekt@type_bolig,",
				"          location,",
				"          Antall_soverom = delObjekt@Antall_soverom,",
				"          id = delObjekt@id,",
				"          price,",
				"          area = delObjekt@area,",
				"          local_area_name,",
				"          long = delObjekt@long,",
				"          lat = delObjekt@lat,",
				"          furnished_state,",
				"          datefrom,",
				"          dateto,",
				"          iscurrent",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> NormNames",
				"nyfinn select(mapColumn(",
				"          Fylke,",
				"          Kommune,",
				"          tittel,",
				"          type_bolig,",
				"          location,",
				"          Antall_soverom,",
				"          id,",
				"          price,",
				"          area,",
				"          local_area_name,",
				"          long,",
				"          lat,",
				"          furnished_state",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> delObjekt",
				"finnSQL, delObjekt lookup(finnSQL@id == delObjekt@id",
				"     && pris == price,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 select(mapColumn(",
				"          fylke = finnSQL@fylke,",
				"          kommune = finnSQL@kommune,",
				"          tittel = finnSQL@tittel,",
				"          type_bolig = finnSQL@type_bolig,",
				"          furnished_state = fursnihed_satus,",
				"          adresse,",
				"          antall_soverom = finnSQL@antall_soverom,",
				"          id = finnSQL@id,",
				"          pris,",
				"          area = finnSQL@area,",
				"          sted,",
				"          long = finnSQL@long,",
				"          lat = finnSQL@lat,",
				"          datefrom,",
				"          dateto,",
				"          iscurrent,",
				"          tittelny = delObjekt@tittel,",
				"          idny = delObjekt@id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> normnames1",
				"normnames1 split(isNull(idny)  && isNull(dateto) && isNull(tittelny),",
				"     disjoint: false) ~> split1@(deaktivated)",
				"select1 derive(dateto = currentDate()-1,",
				"          iscurrent = 0) ~> derivedColumn1",
				"split1@deaktivated select(mapColumn(",
				"          fylke,",
				"          kommune,",
				"          tittel,",
				"          type_bolig,",
				"          adresse,",
				"          antall_soverom,",
				"          id,",
				"          pris,",
				"          furnished_state,",
				"          area,",
				"          sted,",
				"          long,",
				"          lat,",
				"          datefrom,",
				"          dateto,",
				"          iscurrent",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"derivedColumn1 alterRow(updateIf(true())) ~> alterRow11",
				"ConditionalSplit1@NewRow aggregate(groupBy(Fylke,",
				"          Kommune,",
				"          tittel,",
				"          type_bolig,",
				"          location,",
				"          Antall_soverom,",
				"          id,",
				"          price,",
				"          area,",
				"          local_area_name,",
				"          long,",
				"          lat,",
				"          furnished_state),",
				"     count = count('1')) ~> aggregate1",
				"aggregate1 select(mapColumn(",
				"          Fylke,",
				"          Kommune,",
				"          tittel,",
				"          type_bolig,",
				"          location,",
				"          Antall_soverom,",
				"          id,",
				"          price,",
				"          area,",
				"          local_area_name,",
				"          long,",
				"          lat,",
				"          furnished_state",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select5, finnSQL lookup(select5@id == finnSQL@id",
				"     && price == pris,",
				"     multiple: true,",
				"     broadcast: 'auto',",
				"     pickup: 'any')~> lookup2",
				"lookup2 select(mapColumn(",
				"          fylke = select5@fylke,",
				"          kommune = select5@kommune,",
				"          tittel = select5@tittel,",
				"          type_bolig = select5@type_bolig,",
				"          adresse = location,",
				"          antall_soverom = select5@Antall_soverom,",
				"          id = select5@id,",
				"          pris = price,",
				"          area = select5@area,",
				"          sted = local_area_name,",
				"          long = select5@long,",
				"          lat = select5@lat,",
				"          furnished_state,",
				"          iscurrent",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select3",
				"select3 aggregate(groupBy(fylke,",
				"          kommune,",
				"          tittel,",
				"          type_bolig,",
				"          adresse,",
				"          antall_soverom,",
				"          id,",
				"          pris,",
				"          area,",
				"          sted,",
				"          long,",
				"          lat,",
				"          furnished_state),",
				"     havenulls = sum(iscurrent)) ~> aggregate2",
				"aggregate2 split(havenulls ==0,",
				"     disjoint: true) ~> split2@(inactive)",
				"split2@inactive select(mapColumn(",
				"          fylke,",
				"          kommune,",
				"          tittel,",
				"          type_bolig,",
				"          adresse,",
				"          antall_soverom,",
				"          id,",
				"          pris,",
				"          area,",
				"          sted,",
				"          long,",
				"          lat,",
				"          furnished_state",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select4 derive(datefrom = currentDate(),",
				"          dateto = toDate(null()),",
				"          iscurrent = 1) ~> derivedColumn2",
				"ConditionalSplit1@commingagain aggregate(groupBy(Fylke,",
				"          Kommune,",
				"          tittel,",
				"          type_bolig,",
				"          location,",
				"          Antall_soverom,",
				"          id,",
				"          price,",
				"          area,",
				"          local_area_name,",
				"          long,",
				"          lat,",
				"          furnished_state),",
				"     count = count('1')) ~> aggregate3",
				"aggregate3 select(mapColumn(",
				"          fylke = Fylke,",
				"          kommune = Kommune,",
				"          tittel,",
				"          type_bolig,",
				"          location,",
				"          Antall_soverom,",
				"          id,",
				"          price,",
				"          area,",
				"          local_area_name,",
				"          long,",
				"          lat,",
				"          furnished_state",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select5",
				"SetAttrsForNew sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          fylke as string,",
				"          kommune as string,",
				"          tittel as string,",
				"          type_bolig as string,",
				"          fursnihed_satus as string,",
				"          adresse as string,",
				"          antall_soverom as short,",
				"          id as long,",
				"          pris as integer,",
				"          area as string,",
				"          sted as string,",
				"          long as double,",
				"          lat as double,",
				"          datefrom as date,",
				"          dateto as date,",
				"          iscurrent as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     batchSize: 50,",
				"     mapColumn(",
				"          id,",
				"          fylke = Fylke,",
				"          kommune = Kommune,",
				"          tittel,",
				"          type_bolig,",
				"          adresse = location,",
				"          antall_soverom = Antall_soverom,",
				"          fursnihed_satus = furnished_state,",
				"          pris = price,",
				"          area,",
				"          sted = local_area_name,",
				"          long,",
				"          lat,",
				"          datefrom,",
				"          dateto,",
				"          iscurrent",
				"     ),",
				"     partitionBy('roundRobin', 4)) ~> sinkNew",
				"alterRow11 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          fylke as string,",
				"          kommune as string,",
				"          tittel as string,",
				"          type_bolig as string,",
				"          fursnihed_satus as string,",
				"          adresse as string,",
				"          antall_soverom as short,",
				"          id as long,",
				"          pris as integer,",
				"          area as string,",
				"          sted as string,",
				"          long as double,",
				"          lat as double,",
				"          datefrom as date,",
				"          dateto as date,",
				"          iscurrent as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['id','pris','datefrom'],",
				"     format: 'table',",
				"     batchSize: 50,",
				"     mapColumn(",
				"          fylke,",
				"          kommune,",
				"          tittel,",
				"          type_bolig,",
				"          adresse,",
				"          antall_soverom,",
				"          id,",
				"          pris,",
				"          area,",
				"          sted,",
				"          long,",
				"          lat,",
				"          dateto,",
				"          datefrom,",
				"          fursnihed_satus = furnished_state,",
				"          iscurrent",
				"     )) ~> update",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          fylke as string,",
				"          kommune as string,",
				"          tittel as string,",
				"          type_bolig as string,",
				"          fursnihed_satus as string,",
				"          adresse as string,",
				"          antall_soverom as short,",
				"          id as long,",
				"          pris as integer,",
				"          area as string,",
				"          sted as string,",
				"          long as double,",
				"          lat as double,",
				"          datefrom as date,",
				"          dateto as date,",
				"          iscurrent as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     batchSize: 50,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          fylke,",
				"          kommune,",
				"          tittel,",
				"          type_bolig,",
				"          adresse,",
				"          antall_soverom,",
				"          id,",
				"          pris,",
				"          area,",
				"          sted,",
				"          long,",
				"          lat,",
				"          datefrom,",
				"          dateto,",
				"          iscurrent,",
				"          fursnihed_satus = furnished_state",
				"     ),",
				"     partitionBy('roundRobin', 4)) ~> sink1"
			]
		}
	}
}